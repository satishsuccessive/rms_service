"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config = {
    testerServerPort: 5020,
    authProvider: {
        active: true,
        authentication: {
            issuer: "https://dentsuaegis-test.okta-emea.com/oauth2/default",
            clientId: "api://default"
        },
        authorization: {
            getAuthorizations: true,
            authorizationEndpoint: "http://localhost:3010/api/user-roles",
            allRolesEndpoint: "http://localhost:3010/api/roles",
            openDomain: false,
            allowWhenNoRule: true,
            application: "tv-stack",
            rules: [
                {
                    /* TEST1: type and level */
                    route: "/api/test1",
                    methods: ["POST"],
                    allow: "roleType == 'admin' && roleLevel == 'client'"
                },
                {
                    /* TEST2: just type */
                    route: "/api/test1",
                    methods: ["GET"],
                    allow: "roleType == 'admin'"
                },
                {
                    /* TEST2.05: ids */
                    route: "/api/test1/:id1/something/:id2/:id3",
                    methods: ["GET"],
                    allow: "ids['id2'] == 'letMeIn'"
                },
                {
                    /* TEST2.1: with :id */
                    route: "/api/test1/:id",
                    methods: ["GET"],
                    allow: "atLeast(parent(extractRole(id)))"
                },
                {
                    /* TEST3: multiple methods, atLeast */
                    route: "/api/test2",
                    methods: ["GET", "POST"],
                    allow: "atLeast('admin','market')"
                },
                {
                    /* TEST4: all methods */
                    route: "/api/test3",
                    allow: "roleType == 'admin' && roleLevel == 'market'"
                },
                {
                    /* TEST5: atLeast */
                    route: "/api/test4",
                    methods: ["GET"],
                    allow: "atLeast('admin', 'market')"
                },
                {
                    /* TEST6: atLeastForApplication */
                    route: "/api/test5",
                    methods: ["GET"],
                    allow: "atLeastForApplication('admin', 'market', 'tv-stack')"
                },
                {
                    /* TEST7: dynamic atLeastForApplication */
                    route: "/api/test5",
                    methods: ["POST"],
                    allow: "atLeastForApplication('admin', roleLevel, 'tv-stack')"
                },
                {
                    /* TEST8: rule with query parameters */
                    route: "/api/test6",
                    methods: ["GET"],
                    allow: "atLeastForApplication(parms.roleType, parms.roleLevel, 'tv-stack')"
                },
                {
                    /* TEST9: rule with body parameters */
                    route: "/api/test6",
                    methods: ["POST"],
                    allow: "atLeastForApplication(parms.roleType, parms.roleLevel, parms.target)"
                },
                {
                    /* TEST9: rule with any method parameter */
                    route: "/api/test7",
                    allow: "atLeastForApplication(parms.roleType, parms.roleLevel, parms.target)"
                },
                {
                    /* TEST10: atLeast overloading */
                    route: "/api/test8",
                    methods: ["GET"],
                    allow: "atLeast(parms.roleId)"
                },
                {
                    /* TEST10: atLeast overloading */
                    route: "/api/test8",
                    methods: ["POST"],
                    allow: "atLeastForApplication(parms.roleId, parms.target)"
                },
                {
                    /* TEST10: using parent function */
                    route: "/api/test9",
                    methods: ["GET"],
                    allow: "atLeastForApplication(parent(parms.roleType, parms.roleLevel), parms.target)"
                },
                {
                    /* TEST10: overload parent function */
                    route: "/api/test9",
                    methods: ["DELETE"],
                    prefetchUserRoles: ["id"],
                    allow: "atLeastForApplication(parent(extractRole(id)), extractApplication(params.applicationId))"
                },
                {
                    /* TEST10: overload parent function */
                    route: "/api/test9",
                    methods: ["POST"],
                    prefetchUserRoles: ["id"],
                    allow: "atLeastForApplication(parent(extractRole(id)), extractApplication(params.applicationId)) || atLeastForApplication(parent(extractRole(id)), extractApplication(params.applicationId))"
                }
            ]
        }
    }
};
exports.default = config;
//# sourceMappingURL=config.js.map